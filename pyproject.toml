[tool.poetry]
name = "velum"
version = "0.4.0"
description = "An opinionated wrapper for the Eludris API."
authors = ["Chromosomologist <chromosomologist@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
aiohttp = "^3.8.3"
typing-extensions = "^4.4.0"

[tool.poetry.group.dev.dependencies]
ipykernel = "^6.17.1"
pyright = "^1.1.313"
isort = "^5.10.1"
black = "^23.3.0"
slotscheck = "^0.16.1"
ruff = "^0.0.269"
pre-commit = "^2.20.0"
sphinx = "^6.1.3"
sphinx-autobuild = "^2021.3.14"
furo = "^2022.12.7"

[tool.poetry.group.speedups.dependencies]
aiohttp = { extras = ["speedups"], version = "^3.8.3" }
ciso8601 = "^2.2.0"
uvloop = { version = "^0.17.0", platform = "linux" }
orjson = "^3.8.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# [tool.isort]
# profile = "black"
# force_single_line = true
# skip_glob = "**/__init__.pyi"

[tool.pyright]
include = ["velum", "examples"]
exclude = ["**/__init__.py"]
pythonVersion = "3.10"
typeCheckingMode = "strict"

[tool.black]
line-length = 100
target-version = ["py310"]

[tool.slotscheck]
strict-imports = true
require-superclass = true
require-subclass = true
exclude-classes = """
(
    ^velum\\.internal\\.typing_patches:WSMessage$
    |^velum\\.internal\\.data_binding:(_JSONLoader|_JSONDumper)$
)
"""

[tool.ruff]
line-length = 105

select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "C", # flake8-comprehensions
    "B", # flake8-bugbear
]

target-version = "py310"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401", "F403"]

[tool.ruff.isort]
force-single-line = true
